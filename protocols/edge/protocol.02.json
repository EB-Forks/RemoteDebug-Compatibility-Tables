{"version":{"major":"0","minor":"2"},"domains":[{"domain":"Schema","description":"Provides information about the protocol schema.","types":[{"id":"Domain","type":"object","description":"Description of the protocol domain.","properties":[{"name":"name","type":"string","description":"Domain name."},{"name":"version","type":"string","description":"Domain version."}]}],"commands":[{"name":"getDomains","description":"Returns supported domains.","handlers":["browser","renderer"],"returns":[{"name":"domains","type":"array","items":{"$ref":"Domain"},"description":"List of supported domains."}]}]},{"domain":"Page","description":"Actions and events related to the inspected page belong to the page domain.","dependencies":[],"types":[{"id":"FrameId","type":"string","description":"Unique frame identifier."},{"id":"Frame","type":"object","description":"Information about the Frame on the Page.","properties":[{"name":"id","$ref":"FrameId","description":"Frame unique identifier."},{"name":"parentId","$ref":"FrameId","optional":true,"description":"Parent frame unique identifier."},{"name":"name","type":"string","optional":true,"description":"Frame\u0027s name as specified in the tag."},{"name":"url","type":"string","description":"Frame document\u0027s URL."},{"name":"securityOrigin","type":"string","description":"Frame document\u0027s security origin."},{"name":"mimeType","type":"string","description":"Frame document\u0027s mimeType as determined by the browser."}]},{"id":"FrameTree","type":"object","description":"Information about the Frame hierarchy.","properties":[{"$ref":"Frame","name":"frame","description":"Frame information for this tree item."},{"type":"array","items":{"$ref":"FrameTree"},"optional":true,"name":"childFrames","description":"Child frames."}]}],"commands":[{"name":"enable","description":"Enables page domain notifications."},{"name":"disable","description":"Disables page domain notifications."},{"name":"navigate","parameters":[{"name":"url","type":"string","description":"URL to navigate the page to."},{"name":"frameId","$ref":"FrameId","optional":true,"description":"Frame id to navigate. If not specified, will navigate the top page."}],"returns":[{"name":"frameId","$ref":"FrameId","description":"Frame id that will be navigated."}],"description":"Navigates current page to the given URL."},{"name":"getFrameTree","returns":[{"$ref":"FrameTree","name":"frameTree","description":"Present frame tree structure."}],"description":"Returns present frame tree structure."}],"events":[{"name":"frameAttached","parameters":[{"$ref":"FrameId","name":"frameId","description":"Id of the frame that has been attached."},{"$ref":"FrameId","name":"parentFrameId","description":"Parent frame identifier."},{"$ref":"Runtime.StackTrace","optional":true,"name":"stack","description":"JavaScript stack trace of when frame was attached, only set if frame initiated from script."}],"description":"Fired when frame has been attached to its parent."},{"name":"frameDetached","parameters":[{"$ref":"FrameId","name":"frameId","description":"Id of the frame that has been detached."}],"description":"Fired when frame has been detached from its parent."},{"name":"frameNavigated","description":"Fired once navigation of the frame has completed.","parameters":[{"$ref":"Frame","name":"frame","description":"Frame object."}]},{"name":"loadEventFired","description":"Corresponds to the window.onload event.","parameters":[{"type":"number","name":"timestamp","description":"Number of milliseconds since epoch."}]},{"name":"domContentEventFired","description":"Corresponds to the document.onDOMContentLoaded event.","parameters":[{"type":"number","name":"timestamp","description":"Number of milliseconds since epoch."}]}]},{"domain":"DOMDebugger","description":"DOM debugging allows setting breakpoints on particular DOM operations and events. JavaScript execution will stop on these operations as if there was a regular breakpoint set.","dependencies":[],"types":[],"commands":[{"name":"setInstrumentationBreakpoint","parameters":[{"name":"eventName","type":"string","description":"Instrumentation name to stop on. Valid values: \u0027scriptFirstStatement\u0027."}],"experimental":true,"description":"Sets a breakpoint on a particular native event."},{"name":"removeInstrumentationBreakpoint","parameters":[{"name":"eventName","type":"string","description":"Instrumentation name to stop on. Valid values: \u0027scriptFirstStatement\u0027."}],"experimental":true,"description":"Removes a breakpoint on a particular native event."}],"events":[]},{"domain":"CSS","description":"This domain exposes CSS read/write operations. All CSS objects (stylesheets, rules, and styles) have an associated `id` used in subsequent operations on the related object. Each object type has a specific `id` structure, and those are not interchangeable between objects of different kinds. CSS objects can be loaded using the `get*ForNode()` calls (which accept a DOM node id). A client can also keep track of stylesheets via the `styleSheetAdded`/`styleSheetRemoved` events and subsequently load the required stylesheet contents using the `getStyleSheet[Text]()` methods.","dependencies":["DOM"],"experimental":true,"types":[{"id":"StyleSheetId","type":"string"},{"id":"PseudoElementMatches","description":"CSS rule collection for a single pseudo style.","type":"object","properties":[{"name":"pseudoType","description":"Pseudo element type.","$ref":"DOM.PseudoType"},{"name":"matches","description":"Matches of CSS rules applicable to the pseudo style.","type":"array","items":{"$ref":"RuleMatch"}}]},{"id":"InheritedStyleEntry","description":"Inherited CSS rule collection from ancestor node.","type":"object","properties":[{"name":"inlineStyle","description":"The ancestor node\u0027s inline style, if any, in the style inheritance chain.","optional":true,"$ref":"CSSStyle"},{"name":"matchedCSSRules","description":"Matches of CSS rules matching the ancestor node in the style inheritance chain.","type":"array","items":{"$ref":"RuleMatch"}}]},{"id":"RuleMatch","description":"Match data for a CSS rule.","type":"object","properties":[{"name":"rule","description":"CSS rule in the match.","$ref":"CSSRule"}]},{"id":"Value","description":"Data for a simple selector (these are delimited by commas in a selector list).","type":"object","properties":[{"name":"text","description":"Value text.","type":"string"},{"name":"range","description":"Value range in the underlying resource (if available).","optional":true,"$ref":"SourceRange"}]},{"id":"SelectorList","description":"Selector list data.","type":"object","properties":[{"name":"selectors","description":"Selectors in the list.","type":"array","items":{"$ref":"Value"}},{"name":"text","description":"Rule selector text.","type":"string"}]},{"id":"CSSRule","description":"CSS rule representation.","type":"object","properties":[{"name":"styleSheetId","description":"The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.","optional":true,"$ref":"StyleSheetId"},{"name":"selectorList","optional":true,"description":"Rule selector data.","$ref":"SelectorList"},{"name":"origin","optional":true,"description":"Parent stylesheet\u0027s origin.","$ref":"StyleSheetOrigin"},{"name":"style","description":"Associated style declaration.","$ref":"CSSStyle"},{"name":"media","description":"Media list array (for rules involving media queries). The array enumerates media queries\nstarting with the innermost one, going outwards.","optional":true,"type":"array","items":{"$ref":"CSSMedia"}}]},{"id":"SourceRange","description":"Text range within a resource. All numbers are zero-based.","type":"object","properties":[{"name":"startLine","description":"Start line of range.","type":"integer"},{"name":"startColumn","description":"Start column of range (inclusive).","type":"integer"},{"name":"endLine","description":"End line of range","type":"integer"},{"name":"endColumn","description":"End column of range (exclusive).","type":"integer"}]},{"id":"ShorthandEntry","type":"object","properties":[{"name":"name","description":"Shorthand name.","type":"string"},{"name":"value","description":"Shorthand value.","type":"string"},{"name":"important","description":"Whether the property has \"!important\" annotation (implies `false` if absent).","optional":true,"type":"boolean"}]},{"id":"CSSStyle","description":"CSS style representation.","type":"object","properties":[{"name":"styleSheetId","description":"The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.","optional":true,"$ref":"StyleSheetId"},{"name":"cssProperties","description":"CSS properties in the style.","type":"array","items":{"$ref":"CSSProperty"}},{"name":"shorthandEntries","description":"Computed values for all shorthands found in the style.","type":"array","items":{"$ref":"ShorthandEntry"}},{"name":"cssText","description":"Style declaration text (if available).","optional":true,"type":"string"},{"name":"range","description":"Style declaration range in the enclosing stylesheet (if available).","optional":true,"$ref":"SourceRange"}]},{"id":"CSSProperty","description":"CSS property declaration data.","type":"object","properties":[{"name":"name","description":"The property name.","type":"string"},{"name":"value","description":"The property value.","type":"string"},{"name":"important","description":"Whether the property has \"!important\" annotation (implies `false` if absent).","optional":true,"type":"boolean"},{"name":"implicit","description":"Whether the property is implicit (implies `false` if absent).","optional":true,"type":"boolean"},{"name":"text","description":"The full property text as specified in the style.","optional":true,"type":"string"},{"name":"parsedOk","description":"Whether the property is understood by the browser (implies `true` if absent).","optional":true,"type":"boolean"},{"name":"disabled","description":"Whether the property is disabled by the user (present for source-based properties only).","optional":true,"type":"boolean"},{"name":"range","description":"The entire property range in the enclosing style declaration (if available).","optional":true,"$ref":"SourceRange"}]},{"id":"CSSMedia","description":"CSS media rule descriptor.","type":"object","properties":[{"name":"text","description":"Media query text.","type":"string"},{"name":"source","description":"Source of the media query: \"mediaRule\" if specified by a @media rule, \"importRule\" if\nspecified by an @import rule, \"linkedSheet\" if specified by a \"media\" attribute in a linked\nstylesheet\u0027s LINK tag, \"inlineSheet\" if specified by a \"media\" attribute in an inline\nstylesheet\u0027s STYLE tag.","type":"string","enum":["mediaRule","importRule","linkedSheet","inlineSheet"]},{"name":"sourceURL","description":"URL of the document containing the media query description.","optional":true,"type":"string"},{"name":"range","description":"The associated rule (@media or @import) header range in the enclosing stylesheet (if\navailable).","optional":true,"$ref":"SourceRange"},{"name":"styleSheetId","description":"Identifier of the stylesheet containing this object (if exists).","optional":true,"$ref":"StyleSheetId"},{"name":"mediaList","description":"Array of media queries.","optional":true,"type":"array","items":{"$ref":"MediaQuery"}}]},{"id":"MediaQuery","description":"Media query descriptor.","type":"object","properties":[{"name":"expressions","description":"Array of media query expressions.","type":"array","items":{"$ref":"MediaQueryExpression"}},{"name":"active","description":"Whether the media query condition is satisfied.","type":"boolean"}]},{"id":"MediaQueryExpression","description":"Media query expression descriptor.","type":"object","properties":[{"name":"value","description":"Media query expression value.","type":"number"},{"name":"unit","description":"Media query expression units.","type":"string"},{"name":"feature","description":"Media query expression feature.","type":"string"},{"name":"valueRange","description":"The associated range of the value text in the enclosing stylesheet (if available).","optional":true,"$ref":"SourceRange"},{"name":"computedLength","description":"Computed length of media query expression (if applicable).","optional":true,"type":"number"}]},{"id":"PlatformFontUsage","description":"Information about amount of glyphs that were rendered with given font.","type":"object","properties":[{"name":"familyName","description":"Font\u0027s family name reported by platform.","type":"string"},{"name":"isCustomFont","description":"Indicates if the font was downloaded or resolved locally.","type":"boolean"},{"name":"glyphCount","description":"Amount of glyphs that were rendered with this font.","type":"number"}]},{"id":"CSSKeyframesRule","description":"CSS keyframes rule representation.","type":"object","properties":[{"name":"animationName","description":"Animation name.","$ref":"Value"},{"name":"keyframes","description":"List of keyframes.","type":"array","items":{"$ref":"CSSKeyframeRule"}}]},{"id":"CSSKeyframeRule","description":"CSS keyframe rule representation.","type":"object","properties":[{"name":"styleSheetId","description":"The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.","optional":true,"$ref":"StyleSheetId"},{"name":"origin","description":"Parent stylesheet\u0027s origin.","$ref":"StyleSheetOrigin"},{"name":"keyText","description":"Associated key text.","$ref":"Value"},{"name":"style","description":"Associated style declaration.","$ref":"CSSStyle"}]},{"id":"CSSComputedStyleProperty","type":"object","properties":[{"name":"name","description":"Computed style property name.","type":"string"},{"name":"value","description":"Computed style property value.","type":"string"}]},{"id":"CSSStyleSheetHeader","description":"CSS stylesheet metainformation.","type":"object","properties":[{"name":"styleSheetId","description":"The stylesheet identifier.","$ref":"StyleSheetId"},{"name":"sourceURL","description":"Stylesheet resource URL.","type":"string"},{"name":"disabled","description":"Denotes whether the stylesheet is disabled.","type":"boolean"},{"name":"isInline","description":"Whether this stylesheet is created for STYLE tag by parser. This flag is not set for\ndocument.written STYLE tags.","type":"boolean"},{"name":"startLine","description":"Line offset of the stylesheet within the resource (zero based).","type":"number"},{"name":"startColumn","description":"Column offset of the stylesheet within the resource (zero based).","type":"number"},{"name":"length","description":"Size of the content (in characters).","type":"number"}]}],"commands":[{"name":"enable","description":"Enables the CSS agent for the given page. Clients should not assume that the CSS agent has been enabled until the result of this command is received."},{"name":"disable","description":"Disables the CSS agent for the given page."},{"name":"getInlineStylesForNode","description":"Returns the styles defined inline (explicitly in the \"style\" attribute and implicitly, using DOM\nattributes) for a DOM node identified by `nodeId`.","parameters":[{"name":"nodeId","$ref":"DOM.NodeId"}],"returns":[{"name":"inlineStyle","description":"Inline style for the specified DOM node.","optional":true,"$ref":"CSSStyle"},{"name":"attributesStyle","description":"Attribute-defined element style (e.g. resulting from \"width=20 height=100%\").","optional":true,"$ref":"CSSStyle"}]},{"name":"getMatchedStylesForNode","description":"Returns requested styles for a DOM node identified by `nodeId`.","parameters":[{"name":"nodeId","$ref":"DOM.NodeId"}],"returns":[{"name":"inlineStyle","description":"Inline style for the specified DOM node.","optional":true,"$ref":"CSSStyle"},{"name":"attributesStyle","description":"Attribute-defined element style (e.g. resulting from \"width=20 height=100%\").","optional":true,"$ref":"CSSStyle"},{"name":"matchedCSSRules","description":"CSS rules matching this node, from all applicable stylesheets.","optional":true,"type":"array","items":{"$ref":"RuleMatch"}},{"name":"pseudoElements","description":"Pseudo style matches for this node.","optional":true,"type":"array","items":{"$ref":"PseudoElementMatches"}},{"name":"inherited","description":"A chain of inherited styles (from the immediate node parent up to the DOM tree root).","optional":true,"type":"array","items":{"$ref":"InheritedStyleEntry"}},{"name":"cssKeyframesRules","description":"A list of CSS keyframed animations matching this node.","optional":true,"type":"array","items":{"$ref":"CSSKeyframesRule"}}]},{"name":"getPlatformFontsForNode","description":"Requests information about platform fonts which we used to render child TextNodes in the given\nnode.","parameters":[{"name":"nodeId","$ref":"DOM.NodeId"}],"returns":[{"name":"fonts","description":"Usage statistics for every employed platform font.","type":"array","items":{"$ref":"PlatformFontUsage"}}]},{"name":"getComputedStyleForNode","parameters":[{"name":"nodeId","$ref":"DOM.NodeId"}],"returns":[{"items":{"$ref":"CSSComputedStyleProperty"},"type":"array","name":"computedStyle","description":"Computed style for the specified DOM node."}],"description":"Returns the computed style for a DOM node identified by `nodeId`."}],"events":[{"name":"styleSheetAdded","description":"Fired whenever an active document stylesheet is added.","parameters":[{"$ref":"CSSStyleSheetHeader","name":"header","description":"Added stylesheet metainfo."}]},{"name":"styleSheetChanged","description":"Fired whenever a stylesheet is changed as a result of the client operation.","parameters":[{"name":"styleSheetId","$ref":"StyleSheetId"}]},{"name":"styleSheetRemoved","description":"Fired whenever an active document stylesheet is removed.","parameters":[{"$ref":"StyleSheetId","name":"styleSheetId","description":"Identifier of the removed stylesheet."}]}]},{"domain":"DOM","description":"This domain exposes DOM read/write operations. Each DOM Node is represented with its mirror object that has an `id`. This `id` can be used to get additional information on the Node, resolve it into the JavaScript object wrapper, etc. It is important that client receives DOM events only for the nodes that are known to the client. Backend keeps track of the nodes that were sent to the client and never sends the same node twice. It is client\u0027s responsibility to collect information about the nodes that were sent to the client.\u003cp\u003eNote that `iframe` owner elements will return corresponding document elements as their child nodes.\u003c/p\u003e","dependencies":["Runtime"],"types":[{"id":"RGBA","type":"object","description":"A Structure holding an RGBA color.","properties":[{"name":"r","type":"integer","description":"The red component, in the [0-255] range."},{"name":"g","type":"integer","description":"The green component, in the [0-255] range."},{"name":"b","type":"integer","description":"The blue component, in the [0-255] range."},{"name":"a","type":"number","optional":true,"description":"The alpha component, in the [0-1] range. Default is 1."}]},{"id":"HighlightConfig","type":"object","description":"Configuration data for highlighting of page elements.","properties":[{"name":"contentColor","$ref":"RGBA","optional":true,"description":"The content box highlight fill color. Default is transparent."},{"name":"paddingColor","$ref":"RGBA","optional":true,"description":"The padding highlight fill color. Default is transparent."},{"name":"borderColor","$ref":"RGBA","optional":true,"description":"The border highlight fill color. Default is transparent."},{"name":"marginColor","$ref":"RGBA","optional":true,"description":"The margin highlight fill color. Default is transparent."}]},{"id":"NodeId","type":"integer","description":"Unique DOM node identifier"},{"id":"Node","type":"object","description":"Mirror object that represents the actual DOM nodes.","properties":[{"name":"nodeId","$ref":"NodeId","description":"Node Identifier used to reference this node. Backend will fire DOM events for nodes that have a nodeId that is known to the client"},{"name":"parentId","$ref":"NodeId","optional":true,"description":"Node Identifier of the parent Node, if any."},{"name":"backendNodeId","$ref":"NodeId","description":"Backend Node identifier of the node. BackendNodeIds reference Nodes that can be known to the client, but do not push DOM events about this node."},{"name":"nodeType","type":"integer","description":"`Node`\u0027s nodeType."},{"name":"nodeName","type":"string","description":"`Node`\u0027s nodeName."},{"name":"localName","type":"string","description":"`Node`\u0027s localName"},{"name":"nodeValue","type":"string","description":"`Node`\u0027s nodeValue"},{"name":"childNodeCount","type":"integer","optional":true,"description":"Child count for `Container` nodes."},{"name":"children","type":"array","items":{"$ref":"Node"},"optional":true,"description":"Child nodes of this node when requested with children."},{"name":"attributes","type":"array","items":{"type":"string"},"optional":true,"description":"Attributes of `Element` nodes in the form of a flat array `[name1, value1, name2, value2]"},{"name":"documentURL","type":"string","optional":true,"description":"Document URL that `Document` nodes point to."},{"name":"baseURL","type":"string","optional":true,"description":"Document URL that `Document` nodes use for URL completion."},{"name":"publicId","type":"string","optional":true,"description":"`DocumentType` Node\u0027s publicId."},{"name":"systemId","type":"string","optional":true,"description":"`DocumentType` Node\u0027s systemId."},{"name":"internalSubset","type":"string","optional":true,"description":"`DocumentType` Node\u0027s internalSubset."},{"name":"xmlVersion","type":"string","optional":true,"description":"`Document` Node\u0027s xml version in the case of XML documents."},{"name":"name","type":"string","optional":true,"description":"`Attr` Node\u0027s name."},{"name":"value","type":"string","optional":true,"description":"`Attr` Node\u0027s value."},{"name":"frameId","$ref":"Page.FrameId","optional":true,"description":"Frame ID for frame owner elements."},{"name":"contentDocument","$ref":"Node","optional":true,"description":"Content document for frame owner elements."},{"name":"isSVG","type":"boolean","optional":true,"description":"True if the node is SVG."}]}],"commands":[{"name":"enable","description":"Enables DOM agent for the given page."},{"name":"disable","description":"Disables DOM agent for the given page. Disabling the DOM will invalidate any previously valid nodeIds."},{"name":"getDocument","parameters":[{"name":"depth","type":"integer","description":"The maximum depth at which children should be retrieved, defaults to 2. Use -1 for entire subtree."},{"name":"pierce","type":"boolean","description":"Whether or not iframes should be traversed when returning the subtree (default is false)."}],"returns":[{"name":"root","$ref":"Node","description":"Resulting Node."}],"description":"Returns the root DOM node (and optionally the subtree) to the caller. Calling `getDocument` will invalidate any previously valid nodeIds"},{"name":"highlightNode","parameters":[{"$ref":"NodeId","optional":true,"name":"nodeId","description":"Identifier of the node to highlight."},{"$ref":"BackendNodeId","optional":true,"name":"backendNodeId","description":"Identifier of the backend node to highlight."},{"$ref":"Runtime.RemoteObjectId","optional":true,"name":"objectId","description":"JavaScript object id of the node to be highlighted."},{"$ref":"HighlightConfig","name":"higlightConfig","description":"Descriptor of the highlight appearance."}],"returns":[{"name":"root","$ref":"Node","description":"Resulting Node."}],"description":"Higlights DOM node with given id or object wrapper. nodeId, backendNodeId, or objectId must be specified."},{"name":"hideHighlight","description":"Hides any current DOM node highlight."},{"name":"requestChildNodes","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node to get children from."},{"name":"depth","type":"integer","description":"The maximum depth at which children should be retrieved, defaults to 1. Use -1 for entire subtree."},{"name":"pierce","type":"boolean","description":"Whether or not iframes should be traversed when returning the subtree (default is false)."}],"description":"Requests that children of the node with given id are returned to ghe caller in the form of `setChildNodes` events. `setChildNodes` will be fired for each node that has not previously returned it\u0027s children, starting from the requested node down to the specified depth."},{"name":"getAttributes","parameters":[{"$ref":"NodeId","name":"nodeId","description":"Id of the node to retrieve attibutes for."}],"returns":[{"items":{"type":"string"},"type":"array","name":"attributes","description":"An interleaved array of node attribute names and values."}],"description":"Returns attributes for the specified node."},{"name":"getOuterHTML","parameters":[{"$ref":"NodeId","optional":true,"name":"nodeId","description":"Identifier of the node."},{"$ref":"BackendNodeId","optional":true,"name":"backendNodeId","description":"Identifier of the backend node."},{"$ref":"Runtime.RemoteObjectId","optional":true,"name":"objectId","description":"JavaScript object id of the node wrapper."}],"returns":[{"type":"string","name":"outerHTML","description":"Outer HTML markup."}],"description":"Returns node\u0027s HTML markup."},{"name":"pushNodesByBackendIdsToFrontend","parameters":[{"name":"backendNodeIds","type":"array","items":{"$ref":"BackendNodeId"},"description":"Backend Node IDs of the nodes to resolve"}],"returns":[{"name":"nodeIds","type":"array","items":{"$ref":"Node"},"description":"Node Ids of the resolved nodes"}],"description":"Looks up Node Ids and resolves all parents for the specified Backend Node Ids"},{"name":"querySelector","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node to query upon."},{"name":"selector","type":"string","description":"The selector string."}],"returns":[{"name":"nodeId","$ref":"NodeId","description":"Query selector result."}],"description":"Executes `querySelector` on a given node."},{"name":"querySelectorAll","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node to query upon."},{"name":"selector","type":"string","description":"The selector string."}],"returns":[{"name":"nodeIds","type":"array","items":{"$ref":"NodeId"},"description":"Query selector results."}],"description":"Executes `querySelectorAll` on a given node."},{"name":"requestNode","parameters":[{"name":"objectId","$ref":"Runtime.RemoteObjectId","description":"JavaScript object Id to convert into node."}],"returns":[{"name":"nodeId","$ref":"NodeId","description":"Node Id for given object."}],"description":"Requests that the node with given remote object Id is sent to caller. All nodes that form the path from the node to the root are also sent to the client as a series of `setChildNodes` notifications. returns 0 if the document containing the requested node has not previously been requested by the client."},{"name":"resolveNode","parameters":[{"name":"nodeId","$ref":"NodeId","optional":true,"description":"Id of the node to resolve."},{"name":"backendNodeId","$ref":"BackendNodeId","optional":true,"description":"Backend Node Id of the node to resolve."},{"name":"objectGroup","type":"string","description":"Symbolic group name that can be used to release multiple objects."}],"returns":[{"name":"object","$ref":"Runtime.RemoteObject","description":"JavaScript object wrapper for given node."}],"description":"Resolves the JavaScript node object for a given NodeId or BackendNodeId."},{"name":"setInspectedNode","parameters":[{"$ref":"NodeId","name":"nodeId","description":"DOM node id to be accessible by means of $0-$4 in command line API."}],"experimental":true,"description":"Enables console to refer to the previous inspected node with given id via $0-$4."}],"events":[{"name":"setChildNodes","description":"Fired when the backend wishes to provide client with missing DOM structure. This happens upon most calls requesting nodeIds","parameters":[{"name":"parentId","$ref":"NodeId","description":"Parent node to poplate with children."},{"name":"nodes","type":"array","items":{"$ref":"NodeId"},"description":"Child nodes array."}]},{"name":"attributeModified","description":"Fired when `Element`\u0027s attribute is modified.","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node that has changed."},{"name":"name","type":"string","description":"Attribute name."},{"name":"value","type":"string","description":"Attribute value."}]},{"name":"attributeRemoved","description":"Fired when `Element`\u0027s attribute is removed.","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node that has changed."},{"name":"name","type":"string","description":"Attribute name."}]},{"name":"characterDataModified","description":"Mirrors `DOMCharacterDataModified` event.","parameters":[{"name":"nodeId","$ref":"NodeId","description":"Id of the node that has changed."},{"name":"charcterData","type":"string","description":"New text value."}]},{"name":"childNodeInserted","description":"Mirrors `DOMNodeInserted` event.","parameters":[{"name":"parentNodeId","$ref":"NodeId","description":"Id of the node that has changed."},{"name":"previousNodeId","$ref":"NodeId","description":"Id of the inserted node\u0027s previous sibling."},{"name":"node","$ref":"Node","description":"Inserted node data."}]},{"name":"childNodeRemoved","description":"Mirrors `DOMNodeRemoved` event.","parameters":[{"name":"parentNodeId","$ref":"NodeId","description":"Id of the node that has changed."},{"name":"nodeId","$ref":"NodeId","description":"Id of the node that has been removed."}]},{"name":"documentUpdated","description":"Fired when `Document` has been totally updated. Node ids are no longer valid."}]},{"domain":"Overlay","description":"Overlay domain exposes visual adornments and node selection interaction","types":[],"dependencies":["DOM"],"experimental":true,"commands":[{"name":"enable","description":"Enables reporting of \u003ccode\u003enodeHighlightRequested\u003c/code\u003e and \u003ccode\u003einspectElementRequested\u003c/code\u003e events"},{"name":"disable","description":"Disables reporting of Overlay domain events"},{"name":"setInspectMode","description":"Sets the element selection mode for the client","parameters":[{"name":"mode","type":"string","description":"The inspection mode.  Valid values are \u0027searchForNode\u0027 and \u0027none\u0027."},{"name":"highlightConfig","optional":true,"$ref":"DOM.HighlightConfig","description":"The highlight configuration to use while inspecting"}]}],"events":[{"name":"inspectNodeRequested","description":"Notifies the client that the user has asked to inspect a particular node","parameters":[{"$ref":"DOM.BackendNodeId","name":"backendNodeId","description":"The backend node ID of node requested"}]},{"name":"nodeHighlightRequested","description":"Indicates that the user has hovered over the node and may inspect the node","parameters":[{"$ref":"DOM.NodeId","name":"nodeId","description":"The node ID of the node being considered"}]}]},{"domain":"Runtime","description":"Runtime domain exposes JavaScript runtime by means of remote evaluation and mirror objects. Evaluation results are returned as mirror object that expose object type, string representation and unique identifier that can be used for further object reference. Original objects are maintained in memory unless they are either explicitly released.","types":[{"id":"ScriptId","type":"string","description":"Unique script identifier."},{"id":"RemoteObjectId","type":"string","description":"Unique object identifier."},{"id":"UnserializableValue","type":"string","enum":["Infinity","NaN","-Infinity","-0"],"description":"Primitive value which cannot be JSON-stringified."},{"id":"RemoteObject","type":"object","description":"Mirror object referencing original JavaScript object.","properties":[{"name":"type","type":"string","enum":["object","function","undefined","string","number","boolean","symbol"],"description":"Object type."},{"name":"subtype","type":"string","optional":true,"enum":["null","error","promise","node"],"description":"Object subtype hint. Specified for \u003ccode\u003eobject\u003c/code\u003e type values only."},{"name":"className","type":"string","optional":true,"description":"Object class (constructor) name. Specified for \u003ccode\u003eobject\u003c/code\u003e type values only."},{"name":"value","type":"any","optional":true,"description":"Remote object value in case of primitive values or JSON values (if it was requested)."},{"name":"unserializableValue","$ref":"UnserializableValue","optional":true,"description":"Primitive value which can not be JSON-stringified does not have \u003ccode\u003evalue\u003c/code\u003e, but gets this property."},{"name":"description","type":"string","optional":true,"description":"String representation of the object."},{"name":"objectId","$ref":"RemoteObjectId","optional":true,"description":"Unique object identifier (for non-primitive values)."},{"name":"msDebuggerPropertyId","type":"string","optional":true,"experimental":true,"description":"Microsoft: The associated debugger property id for this object."}]},{"id":"PropertyDescriptor","type":"object","description":"Object property descriptor.","properties":[{"name":"name","type":"string","description":"Property name or symbol description."},{"name":"value","$ref":"RemoteObject","optional":true,"description":"The value associated with the property."},{"name":"writable","type":"boolean","optional":true,"description":"True if the value associated with the property may be changed (data descriptors only)."},{"name":"get","$ref":"RemoteObject","optional":true,"description":"A function which serves as a getter for the property, or \u003ccode\u003eundefined\u003c/code\u003e if there is no getter (accessor descriptors only)."},{"name":"set","$ref":"RemoteObject","optional":true,"description":"A function which serves as a setter for the property, or \u003ccode\u003eundefined\u003c/code\u003e if there is no setter (accessor descriptors only)."},{"name":"configurable","type":"boolean","description":"True if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object."},{"name":"enumerable","type":"boolean","description":"True if this property shows up during enumeration of the properties on the corresponding object."},{"name":"wasThrown","type":"boolean","optional":true,"description":"True if the result was thrown during the evaluation."},{"name":"isOwn","optional":true,"type":"boolean","description":"True if the property is owned for the object."},{"name":"msReturnValue","type":"boolean","optional":true,"experimental":true,"description":"Microsoft: True if the property is a return value."},{"name":"symbol","$ref":"RemoteObject","optional":true,"description":"Property symbol object, if the property is of the `symbol` type. "}]},{"id":"CallArgument","type":"object","description":"Represents function call argument. Either remote object id \u003ccode\u003eobjectId\u003c/code\u003e, primitive \u003ccode\u003evalue\u003c/code\u003e, unserializable primitive value or neither of (for undefined) them should be specified.","properties":[{"name":"value","type":"any","optional":true,"description":"Primitive value or serializable javascript object."},{"name":"unserializableValue","$ref":"UnserializableValue","optional":true,"description":"Primitive value which can not be JSON-stringified."},{"name":"objectId","$ref":"RemoteObjectId","optional":true,"description":"Remote object handle."}]},{"id":"ExecutionContextId","type":"integer","description":"Id of an execution context."},{"properties":[{"$ref":"ExecutionContextId","name":"id","description":"Unique id of the execution context. It can be used to specify in which execution context\nscript evaluation should be performed."},{"type":"string","name":"origin","description":"Execution context origin."},{"type":"string","name":"name","description":"Human readable name describing given context."}],"type":"object","id":"ExecutionContextDescription","description":"Description of an isolated world."},{"id":"ExceptionDetails","type":"object","description":"Detailed information about exception (or error) that was thrown during script compilation or execution.","properties":[{"name":"exceptionId","type":"integer","description":"Exception id."},{"name":"text","type":"string","description":"Exception text, which should be used together with exception object when available."},{"name":"lineNumber","type":"integer","description":"Line number of the exception location (0-based)."},{"name":"columnNumber","type":"integer","description":"Column number of the exception location (0-based)."},{"name":"scriptId","$ref":"ScriptId","optional":true,"description":"Script ID of the exception location."},{"name":"url","type":"string","optional":true,"description":"URL of the exception location, to be used when the script was not reported."},{"name":"stackTrace","$ref":"StackTrace","optional":true,"description":"JavaScript stack trace if available."},{"name":"exception","$ref":"RemoteObject","optional":true,"description":"Exception object if available."},{"name":"executionContextId","$ref":"ExecutionContextId","optional":true,"description":"Identifier of the context where exception happened."}]},{"id":"Timestamp","type":"integer","description":"Number of milliseconds since epoch."},{"id":"CallFrame","type":"object","description":"Stack entry for runtime errors and assertions.","properties":[{"name":"functionName","type":"string","description":"JavaScript function name."},{"name":"scriptId","$ref":"ScriptId","description":"JavaScript script id. ScriptId will be empty if debugger is not enabled."},{"name":"url","type":"string","description":"JavaScript script name or url."},{"name":"lineNumber","type":"integer","description":"JavaScript script line number (0-based)."},{"name":"columnNumber","type":"integer","description":"JavaScript script column number (0-based)."}]},{"id":"StackTrace","type":"object","description":"Call frames for assertions or error messages.","properties":[{"name":"description","type":"string","optional":true,"description":"String label of this stack trace. For async traces this may be a name of the function that initiated the async call."},{"name":"callFrames","type":"array","items":{"$ref":"CallFrame"},"description":"JavaScript function name."},{"name":"parent","$ref":"StackTrace","optional":true,"description":"Asynchronous JavaScript stack trace that preceded this stack, if available."}]}],"commands":[{"name":"enable","description":"Enables reporting of the \u003ccode\u003eexecutionContextCreated\u003c/code\u003e, \u003ccode\u003eexecutionContextDestroyed\u003c/code\u003e and \u003ccode\u003eexecutionContextsCleared\u003c/code\u003e events. When the reporting gets enabled the \u003ccode\u003eexecutionContextCreated\u003c/code\u003e event will be sent immediately for each existing execution context."},{"name":"disable","description":"Disables reporting of the \u003ccode\u003eexecutionContextCreated\u003c/code\u003e, \u003ccode\u003eexecutionContextDestroyed\u003c/code\u003e and \u003ccode\u003eexecutionContextsCleared\u003c/code\u003e events."},{"name":"evaluate","parameters":[{"name":"expression","type":"string","description":"Expression to evaluate."},{"name":"includeCommandLineAPI","type":"boolean","optional":true,"description":"Determines whether Command Line API should be available during the evaluation."},{"name":"objectGroup","type":"string","optional":true,"description":"Symbolic group name that can be used to release multiple objects."},{"name":"silent","type":"boolean","optional":true,"description":"In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides \u003ccode\u003esetPauseOnException\u003c/code\u003e state."},{"name":"contextId","$ref":"ExecutionContextId","optional":true,"description":"Specifies in which execution context to perform evaluation. If the parameter is omitted the evaluation will be performed in the context of the inspected page."},{"name":"returnByValue","type":"boolean","optional":true,"description":"Whether the result is expected to be a JSON object that should be sent by value."},{"name":"awaitPromise","type":"boolean","optional":true,"description":"Whether execution should \u003ccode\u003eawait\u003c/code\u003e for resulting value and return once awaited promise is resolved."}],"returns":[{"name":"result","$ref":"RemoteObject","description":"Evaluation result."}],"description":"Evaluates expression on global object."},{"name":"callFunctionOn","parameters":[{"name":"functionDeclaration","type":"string","description":"Declaration of the function to call."},{"name":"objectId","$ref":"RemoteObjectId","optional":true,"description":"Identifier of the object to call function on. Either objectId or executionContextId should be specified.  objectId must be from the Runtime.evaluate() function."},{"name":"arguments","type":"array","items":{"$ref":"CallArgument","description":"Call argument."},"optional":true,"description":"Call arguments. All call arguments must belong to the same JavaScript world as the target object."},{"name":"silent","type":"boolean","optional":true,"description":"In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides \u003ccode\u003esetPauseOnException\u003c/code\u003e state."},{"name":"returnByValue","type":"boolean","optional":true,"description":"Whether the result is expected to be a JSON object which should be sent by value."},{"name":"awaitPromise","type":"boolean","optional":true,"description":"Whether execution should \u003ccode\u003eawait\u003c/code\u003e for resulting value and return once awaited promise is resolved."},{"$ref":"ExecutionContextId","optional":true,"name":"executionContextId","description":"Specifies execution context which global object will be used to call function on. Either\nexecutionContextId or objectId should be specified."},{"name":"objectGroup","type":"string","optional":true,"description":"Symbolic group name that can be used to release multiple objects. If objectGroup is not specified and objectId is, objectGroup will be inherited from object."}],"returns":[{"name":"result","$ref":"RemoteObject","description":"Call result."}],"description":"Calls function with given declaration on the given object. Object group of the result is inherited from the target object."},{"name":"awaitPromise","parameters":[{"name":"promiseObjectId","$ref":"RemoteObjectId","description":"Identifier of the promise."},{"name":"returnByValue","optional":true,"type":"boolean","description":"Whether the result is expected to be a JSON object that should be sent by value."}],"returns":[{"name":"result","$ref":"RemoteObject","description":"Promise result.  Will contain rejected value if promise was rejected."}],"description":"Add handler to promise with given promise object id."},{"name":"getProperties","parameters":[{"name":"objectId","$ref":"RemoteObjectId","description":"Identifier of the object to return properties for. objectId must be from the Debugger.evaluateOnCallFrame() function."},{"name":"ownProperties","optional":true,"type":"boolean","description":"If true, returns properties belonging only to the element itself, not to its prototype chain."},{"name":"accessorPropertiesOnly","optional":true,"type":"boolean","description":"If true, returns accessor properties (with getter/setter) only; internal properties are not returned either.","experimental":true}],"returns":[{"name":"result","type":"array","items":{"$ref":"PropertyDescriptor"},"description":"Object properties."}],"description":"Returns properties of a given object. Object group of the result is inherited from the target object."},{"name":"globalLexicalScopeNames","returns":[{"name":"names","type":"array","items":{"type":"string"}}],"description":"Returns all let, const, and class variables from the console global scope."},{"name":"releaseObject","parameters":[{"name":"objectId","$ref":"RemoteObjectId","description":"Identifier of the object to release. "}],"description":"Releases remote object with given id."},{"name":"releaseObjectGroup","parameters":[{"name":"objectGroup","type":"string","description":"Symbolic object group name. "}],"description":"Releases all remote objects that belong to a given group."},{"name":"discardConsoleEntries","description":"Discards collected exceptions and console API calls."}],"events":[{"name":"executionContextCreated","parameters":[{"$ref":"ExecutionContextDescription","name":"context","description":"A newly created execution context."}],"description":"Issued when new execution context is created."},{"name":"executionContextDestroyed","parameters":[{"$ref":"ExecutionContextId","name":"executionContextId","description":"Id of the destroyed context"}],"description":"Issued when execution context is destroyed."},{"name":"executionContextsCleared","description":"Issued when all executionContexts were cleared in browser"},{"name":"exceptionThrown","description":"Issued when exception was thrown and unhandled.","parameters":[{"name":"timestamp","$ref":"Timestamp","description":"Timestamp of the exception."},{"name":"exceptionDetails","$ref":"ExceptionDetails"}]},{"name":"consoleAPICalled","parameters":[{"name":"type","description":"Type of the call. This includes log, info, warn, error, debug, assert, table, trace, dir, dirxml, clear, select, count, countReset, timeEnd, exception, timeStamp, group, groupCollapsed, groupEnd.","type":"string","enum":["log","info","warning","error","debug","assert","table","trace","dir","dirxml","clear","select","count","countReset","timeEnd","timeStamp","startGroup","startGroupCollapsed","endGroup"]},{"name":"args","description":"Call arguments.","type":"array","items":{"$ref":"RemoteObject"}},{"name":"executionContextId","description":"Identifier of the context where console call was made","$ref":"ExecutionContextId"},{"name":"timestamp","description":"Call timestamp.","$ref":"Timestamp","optional":true},{"name":"stackTrace","description":"Stack trace captured if available","$ref":"StackTrace","optional":true}]}]},{"domain":"Debugger","description":"Debugger domain exposes JavaScript debugging capabilities. It allows setting and removing breakpoints, stepping through execution, exploring stack traces, etc.","dependencies":["Runtime"],"types":[{"id":"BreakpointId","type":"string","description":"Breakpoint identifier."},{"id":"CallFrameId","type":"string","description":"Call frame identifier."},{"id":"Location","type":"object","properties":[{"name":"scriptId","$ref":"Runtime.ScriptId","description":"Script identifier as reported in the \u003ccode\u003eDebugger.scriptParsed\u003c/code\u003e."},{"name":"lineNumber","type":"integer","description":"Line number in the script (0-based)."},{"name":"columnNumber","type":"integer","optional":true,"description":"Column number in the script (0-based)."},{"name":"msLength","type":"integer","description":"Microsoft: Length of code (i.e. number of characters) at this call frame."}],"description":"Location in the source code."},{"id":"BreakLocation","type":"object","properties":[{"name":"scriptId","$ref":"Runtime.ScriptId","description":"Script identifier as reported in the \u003ccode\u003eDebugger.scriptParsed\u003c/code\u003e."},{"name":"lineNumber","type":"integer","description":"Line number in the script (0-based)."},{"name":"columnNumber","type":"integer","optional":true,"description":"Column number in the script (0-based)."},{"name":"msLength","type":"integer","description":"Microsoft: Length of code (i.e. number of characters) at this call frame."},{"name":"type","type":"string","optional":true,"description":"Allowed values: debuggerStatement, call, return."}],"description":"Break location in the source code."},{"id":"CallFrame","type":"object","properties":[{"name":"callFrameId","$ref":"CallFrameId","description":"Call frame identifier. This identifier is only valid while the debugger is paused."},{"name":"functionName","type":"string","description":"Name of the JavaScript function called on this call frame."},{"name":"functionLocation","$ref":"Location","optional":true,"experimental":true,"description":"Location in the source code."},{"name":"location","$ref":"Location","description":"Location in the source code."},{"name":"url","type":"string","description":"JavaScript script name or url."},{"name":"scopeChain","type":"array","items":{"$ref":"Scope"},"description":"Scope chain for this call frame."},{"name":"this","$ref":"Runtime.RemoteObject","description":"\u003ccode\u003ethis\u003c/code\u003e object for this call frame."},{"name":"returnValue","$ref":"Runtime.RemoteObject","optional":true,"description":"The value being returned, if the function is at return point."}],"description":"JavaScript call frame. Array of call frames form the call stack."},{"id":"Scope","type":"object","properties":[{"name":"type","type":"string","enum":["global","local","with","closure","catch","block","script","eval","module","return"],"description":"Scope type."},{"name":"object","$ref":"Runtime.RemoteObject","description":"Object representing the scope. For \u003ccode\u003eglobal\u003c/code\u003e and \u003ccode\u003ewith\u003c/code\u003e scopes it represents the actual object; for the rest of the scopes, it is artificial transient object enumerating scope variables as its properties."},{"name":"name","type":"string","optional":true},{"name":"startLocation","$ref":"Location","optional":true,"description":"Location in the source code where scope starts"},{"name":"endLocation","$ref":"Location","optional":true,"description":"Location in the source code where scope ends"}],"description":"Scope description."}],"commands":[{"name":"enable","description":"Enables debugger for the given page. Clients should not assume that the debugging has been enabled until the result for this command is received."},{"name":"disable","description":"Disables debugger for given page."},{"name":"getPossibleBreakpoints","parameters":[{"name":"start","$ref":"Location","description":"Start of range to search possible breakpoint locations in."},{"name":"end","$ref":"Location","description":"End of range to search possible breakpoint locations in (excluding). When not specified, end of scripts is used as end of range."}],"returns":[{"name":"locations","$ref":"BreakLocation","description":"List of the possible breakpoint locations."}],"description":"Returns possible locations for breakpoint. scriptId in start and end range locations should be the same."},{"name":"setBreakpointsActive","parameters":[{"name":"active","type":"boolean","description":"New value for breakpoints active state."}],"description":"Activates / deactivates all breakpoints on the page."},{"name":"setBreakpointByUrl","parameters":[{"name":"lineNumber","type":"integer","description":"Line number to set breakpoint at."},{"name":"url","type":"string","optional":true,"description":"URL of the resources to set breakpoint on."},{"name":"urlRegex","type":"string","optional":true,"description":"Regex pattern for the URLs of the resources to set breakpoints on. Either \u003ccode\u003eurl\u003c/code\u003e or \u003ccode\u003eurlRegex\u003c/code\u003e must be specified."},{"name":"columnNumber","type":"integer","optional":true,"description":"Offset in the line to set breakpoint at."},{"name":"condition","type":"string","optional":true,"description":"Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true."}],"returns":[{"name":"breakpointId","$ref":"BreakpointId","description":"Id of the created breakpoint for further reference."},{"name":"locations","type":"array","items":{"$ref":"Location"},"description":"List of the locations this breakpoint resolved into upon addition."}],"description":"Sets JavaScript breakpoint at given location specified either by URL or URL regex. Once this command is issued, all existing parsed scripts will have breakpoints resolved and returned in \u003ccode\u003elocations\u003c/code\u003e property. Further matching script parsing will result in subsequent \u003ccode\u003ebreakpointResolved\u003c/code\u003e events issued. This logical breakpoint will survive page reloads."},{"name":"setBreakpoint","parameters":[{"name":"location","$ref":"Location","description":"Location to set breakpoint in."},{"name":"condition","type":"string","optional":true,"description":"Expression to use as a breakpoint condition. When specified, debugger will only stop on the breakpoint if this expression evaluates to true."}],"returns":[{"name":"breakpointId","$ref":"BreakpointId","description":"Id of the created breakpoint for further reference."},{"name":"actualLocation","$ref":"Location","description":"Location this breakpoint resolved into."}],"description":"Sets JavaScript breakpoint at a given location."},{"name":"removeBreakpoint","parameters":[{"name":"breakpointId","$ref":"BreakpointId"}],"description":"Removes JavaScript breakpoint."},{"name":"stepOver","description":"Steps over the statement."},{"name":"stepInto","description":"Steps into the function call."},{"name":"stepOut","description":"Steps out of the function call."},{"name":"pause","description":"Stops on the next JavaScript statement."},{"name":"resume","description":"Resumes JavaScript execution."},{"name":"getScriptSource","parameters":[{"name":"scriptId","$ref":"Runtime.ScriptId","description":"Id of the script to get source for."}],"returns":[{"name":"scriptSource","type":"string","description":"Script source."}],"description":"Returns source for the script with given id."},{"name":"setPauseOnExceptions","parameters":[{"name":"state","type":"string","enum":["none","uncaught","all"],"description":"Pause on exceptions mode."}],"description":"Defines pause on exceptions state. Can be set to stop on all exceptions, uncaught exceptions or no exceptions. Initial pause on exceptions state is \u003ccode\u003enone\u003c/code\u003e."},{"name":"evaluateOnCallFrame","parameters":[{"name":"callFrameId","$ref":"CallFrameId","description":"Call frame identifier to evaluate on."},{"name":"expression","type":"string","description":"Expression to evaluate."}],"returns":[{"name":"result","$ref":"Runtime.RemoteObject","description":"Object wrapper for the evaluation result."}],"description":"Evaluates expression on a given call frame."},{"name":"setVariableValue","parameters":[{"name":"scopeNumber","type":"integer","description":"0-based number of scope as was listed in scope chain. Only \u0027local\u0027, \u0027closure\u0027 and \u0027catch\u0027 scope types are allowed. Other scopes could be manipulated manually."},{"name":"variableName","type":"string","description":"Variable name."},{"name":"newValue","$ref":"Runtime.CallArgument","description":"New variable value."},{"name":"callFrameId","$ref":"CallFrameId","description":"Id of callframe that holds variable."}],"description":"Changes value of variable in a callframe. Object-based scopes are not supported and must be mutated manually."},{"name":"setBlackboxPatterns","parameters":[{"name":"patterns","type":"array","items":{"type":"string"},"description":"Array of regexps that will be used to check script url for blackbox state."}],"experimental":true,"description":"Replace previous blackbox patterns with passed ones. Forces backend to skip stepping/pausing in scripts with url matching one of the patterns. The debugger will try to leave blackboxed script by performing \u0027step in\u0027 several times, finally resorting to \u0027step out\u0027 if unsuccessful."},{"name":"msSetDebuggerPropertyValue","parameters":[{"name":"debuggerPropertyId","type":"string","description":"Microsoft: The property id (i.e. msDebuggerPropertyId) to set."},{"name":"newValue","type":"string"}],"deprecated":true,"experimental":true,"description":"Microsoft: Sets the specified debugger property to the specified value."}],"events":[{"name":"scriptParsed","parameters":[{"name":"scriptId","$ref":"Runtime.ScriptId","description":"Identifier of the script parsed."},{"name":"url","type":"string","description":"URL or name of the script parsed (if any)."},{"name":"startLine","type":"integer","description":"Line offset of the script within the resource with given URL (for script tags)."},{"name":"startColumn","type":"integer","description":"Column offset of the script within the resource with given URL."},{"name":"endLine","type":"integer","description":"Last line of the script."},{"name":"endColumn","type":"integer","description":"Length of the last line of the script."},{"name":"executionContextId","$ref":"Runtime.ExecutionContextId","description":"Specifies script creation context."},{"name":"sourceMapURL","type":"string","optional":true,"description":"URL of source map associated with script (if any)."},{"name":"length","type":"integer","optional":true,"description":"This script length.","experimental":true},{"name":"msParentId","type":"string","optional":true,"experimental":true,"description":"This is the parent document ID."},{"name":"msMimeType","type":"string","optional":true,"experimental":true,"description":"This is the mime type."},{"name":"msIsDynamicCode","type":"boolean","optional":true,"experimental":true,"description":"This indicates whether it is dynamic code."},{"name":"msLongDocumentId","type":"integer","optional":true,"experimental":true,"description":"This is the long document ID."}],"description":"Fired when the script is parsed. This event is also fired for all known and uncollected scripts upon enabling debugger."},{"name":"breakpointResolved","parameters":[{"name":"breakpointId","$ref":"BreakpointId","description":"Breakpoint unique identifier."},{"name":"location","$ref":"Location","description":"Actual breakpoint location."},{"name":"msLength","type":"integer","optional":true,"experimental":true,"description":"Microsoft: Length of code (i.e. number of characters) at the breakpoint location."}],"description":"Fired when breakpoint is resolved to an actual script and location."},{"name":"paused","parameters":[{"name":"callFrames","type":"array","items":{"$ref":"CallFrame"},"description":"Call stack the debugger stopped on."},{"name":"reason","type":"string","enum":["breakpoint","step","exception","other","EventListener"],"description":"Pause reason."},{"name":"data","type":"object","optional":true,"description":"Object containing break-specific auxiliary properties."},{"name":"hitBreakpoints","type":"array","optional":true,"items":{"type":"string"},"description":"Hit breakpoints IDs"},{"name":"asyncStackTrace","$ref":"StackTrace","optional":true,"description":"JavaScript async stack trace."}],"description":"Fired when the debuggers breaks for a breakpoint or exception."},{"name":"resumed","description":"Fired when the debugger resumes execution."}]}]}
